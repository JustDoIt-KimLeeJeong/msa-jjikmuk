plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

description = 'User Service (no Spring Cloud)'

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	// Web / Validation / Security / Actuator
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// JPA + H2 (개발용)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2'
	// MySQL 쓰면 이거로 교체/추가
	// runtimeOnly 'com.mysql:mysql-connector-j'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// 설정 메타데이터(선택) - @ConfigurationProperties 편의
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// JWT (JJWT 0.12.x)
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly   'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly   'io.jsonwebtoken:jjwt-jackson:0.12.5'

	// ModelMapper (선택)
	implementation 'org.modelmapper:modelmapper:3.2.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}